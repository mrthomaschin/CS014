{"filter":false,"title":"traversals.cc","tooltip":"/traversals.cc","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":10,"column":10},"end":{"row":10,"column":11},"action":"insert","lines":[" "],"id":560}],[{"start":{"row":10,"column":11},"end":{"row":10,"column":12},"action":"insert","lines":["="],"id":561}],[{"start":{"row":10,"column":12},"end":{"row":10,"column":13},"action":"insert","lines":["="],"id":562}],[{"start":{"row":10,"column":13},"end":{"row":10,"column":14},"action":"insert","lines":[" "],"id":563}],[{"start":{"row":10,"column":14},"end":{"row":10,"column":15},"action":"insert","lines":["n"],"id":564}],[{"start":{"row":10,"column":15},"end":{"row":10,"column":16},"action":"insert","lines":["u"],"id":565}],[{"start":{"row":10,"column":16},"end":{"row":10,"column":17},"action":"insert","lines":["l"],"id":566}],[{"start":{"row":10,"column":16},"end":{"row":10,"column":17},"action":"remove","lines":["l"],"id":567}],[{"start":{"row":10,"column":15},"end":{"row":10,"column":16},"action":"remove","lines":["u"],"id":568}],[{"start":{"row":10,"column":14},"end":{"row":10,"column":15},"action":"remove","lines":["n"],"id":569}],[{"start":{"row":10,"column":14},"end":{"row":10,"column":15},"action":"insert","lines":["N"],"id":570}],[{"start":{"row":10,"column":15},"end":{"row":10,"column":16},"action":"insert","lines":["U"],"id":571}],[{"start":{"row":10,"column":16},"end":{"row":10,"column":17},"action":"insert","lines":["L"],"id":572}],[{"start":{"row":10,"column":17},"end":{"row":10,"column":18},"action":"insert","lines":["L"],"id":573}],[{"start":{"row":10,"column":19},"end":{"row":11,"column":0},"action":"insert","lines":["",""],"id":574},{"start":{"row":11,"column":0},"end":{"row":11,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":11,"column":2},"end":{"row":11,"column":3},"action":"insert","lines":[" "],"id":575}],[{"start":{"row":11,"column":3},"end":{"row":11,"column":4},"action":"insert","lines":[" "],"id":576}],[{"start":{"row":11,"column":4},"end":{"row":11,"column":5},"action":"insert","lines":["r"],"id":577}],[{"start":{"row":11,"column":5},"end":{"row":11,"column":6},"action":"insert","lines":["e"],"id":578}],[{"start":{"row":11,"column":6},"end":{"row":11,"column":7},"action":"insert","lines":["t"],"id":579}],[{"start":{"row":11,"column":7},"end":{"row":11,"column":8},"action":"insert","lines":["u"],"id":580}],[{"start":{"row":11,"column":8},"end":{"row":11,"column":9},"action":"insert","lines":["r"],"id":581}],[{"start":{"row":11,"column":9},"end":{"row":11,"column":10},"action":"insert","lines":["n"],"id":582}],[{"start":{"row":11,"column":10},"end":{"row":11,"column":11},"action":"insert","lines":[";"],"id":583}],[{"start":{"row":11,"column":10},"end":{"row":11,"column":11},"action":"insert","lines":[" "],"id":584}],[{"start":{"row":11,"column":11},"end":{"row":11,"column":12},"action":"insert","lines":["v"],"id":585}],[{"start":{"row":11,"column":12},"end":{"row":11,"column":13},"action":"insert","lines":["e"],"id":586}],[{"start":{"row":11,"column":13},"end":{"row":11,"column":14},"action":"insert","lines":["c"],"id":587}],[{"start":{"row":11,"column":14},"end":{"row":11,"column":15},"action":"insert","lines":["t"],"id":588}],[{"start":{"row":11,"column":15},"end":{"row":11,"column":16},"action":"insert","lines":["o"],"id":589}],[{"start":{"row":11,"column":16},"end":{"row":11,"column":17},"action":"insert","lines":["r"],"id":590}],[{"start":{"row":11,"column":17},"end":{"row":11,"column":18},"action":"insert","lines":["<"],"id":591}],[{"start":{"row":11,"column":18},"end":{"row":11,"column":19},"action":"insert","lines":["T"],"id":592}],[{"start":{"row":11,"column":19},"end":{"row":11,"column":20},"action":"insert","lines":[">"],"id":593}],[{"start":{"row":11,"column":20},"end":{"row":11,"column":22},"action":"insert","lines":["()"],"id":594}],[{"start":{"row":10,"column":0},"end":{"row":12,"column":0},"action":"remove","lines":["  if (root == NULL)","    return vector<T>();",""],"id":595}],[{"start":{"row":10,"column":21},"end":{"row":11,"column":0},"action":"insert","lines":["",""],"id":596},{"start":{"row":11,"column":0},"end":{"row":11,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":11,"column":2},"end":{"row":11,"column":3},"action":"insert","lines":["i"],"id":597}],[{"start":{"row":11,"column":3},"end":{"row":11,"column":4},"action":"insert","lines":["f"],"id":598}],[{"start":{"row":11,"column":4},"end":{"row":11,"column":5},"action":"insert","lines":[" "],"id":599}],[{"start":{"row":11,"column":5},"end":{"row":11,"column":7},"action":"insert","lines":["()"],"id":600}],[{"start":{"row":11,"column":6},"end":{"row":11,"column":7},"action":"insert","lines":["r"],"id":601}],[{"start":{"row":11,"column":7},"end":{"row":11,"column":8},"action":"insert","lines":["o"],"id":602}],[{"start":{"row":11,"column":8},"end":{"row":11,"column":9},"action":"insert","lines":["o"],"id":603}],[{"start":{"row":11,"column":9},"end":{"row":11,"column":10},"action":"insert","lines":["t"],"id":604}],[{"start":{"row":11,"column":10},"end":{"row":11,"column":11},"action":"insert","lines":[" "],"id":605}],[{"start":{"row":11,"column":11},"end":{"row":11,"column":12},"action":"insert","lines":["="],"id":606}],[{"start":{"row":11,"column":12},"end":{"row":11,"column":13},"action":"insert","lines":["="],"id":607}],[{"start":{"row":11,"column":13},"end":{"row":11,"column":14},"action":"insert","lines":[" "],"id":608}],[{"start":{"row":11,"column":14},"end":{"row":11,"column":15},"action":"insert","lines":["n"],"id":609}],[{"start":{"row":11,"column":14},"end":{"row":11,"column":15},"action":"remove","lines":["n"],"id":610}],[{"start":{"row":11,"column":14},"end":{"row":11,"column":15},"action":"insert","lines":["N"],"id":611}],[{"start":{"row":11,"column":15},"end":{"row":11,"column":16},"action":"insert","lines":["U"],"id":612}],[{"start":{"row":11,"column":16},"end":{"row":11,"column":17},"action":"insert","lines":["L"],"id":613}],[{"start":{"row":11,"column":17},"end":{"row":11,"column":18},"action":"insert","lines":["L"],"id":614}],[{"start":{"row":11,"column":11},"end":{"row":11,"column":12},"action":"remove","lines":["="],"id":615},{"start":{"row":11,"column":11},"end":{"row":11,"column":12},"action":"insert","lines":["!"]}],[{"start":{"row":11,"column":11},"end":{"row":11,"column":12},"action":"remove","lines":["!"],"id":616},{"start":{"row":11,"column":11},"end":{"row":11,"column":12},"action":"insert","lines":["="]}],[{"start":{"row":11,"column":19},"end":{"row":12,"column":0},"action":"insert","lines":["",""],"id":617},{"start":{"row":12,"column":0},"end":{"row":12,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":12,"column":2},"end":{"row":12,"column":3},"action":"insert","lines":[" "],"id":618}],[{"start":{"row":12,"column":3},"end":{"row":12,"column":4},"action":"insert","lines":[" "],"id":619}],[{"start":{"row":12,"column":4},"end":{"row":12,"column":5},"action":"insert","lines":["r"],"id":620}],[{"start":{"row":12,"column":5},"end":{"row":12,"column":6},"action":"insert","lines":["e"],"id":621}],[{"start":{"row":12,"column":6},"end":{"row":12,"column":7},"action":"insert","lines":["t"],"id":622}],[{"start":{"row":12,"column":7},"end":{"row":12,"column":8},"action":"insert","lines":["u"],"id":623}],[{"start":{"row":12,"column":8},"end":{"row":12,"column":9},"action":"insert","lines":["r"],"id":624}],[{"start":{"row":12,"column":9},"end":{"row":12,"column":10},"action":"insert","lines":["n"],"id":625}],[{"start":{"row":12,"column":10},"end":{"row":12,"column":11},"action":"insert","lines":[" "],"id":626}],[{"start":{"row":12,"column":11},"end":{"row":12,"column":12},"action":"insert","lines":["o"],"id":627}],[{"start":{"row":12,"column":11},"end":{"row":12,"column":12},"action":"remove","lines":["o"],"id":628}],[{"start":{"row":12,"column":11},"end":{"row":12,"column":12},"action":"insert","lines":["p"],"id":629}],[{"start":{"row":12,"column":12},"end":{"row":12,"column":13},"action":"insert","lines":["r"],"id":630}],[{"start":{"row":12,"column":13},"end":{"row":12,"column":14},"action":"insert","lines":["e"],"id":631}],[{"start":{"row":12,"column":14},"end":{"row":12,"column":15},"action":"insert","lines":["o"],"id":632}],[{"start":{"row":12,"column":15},"end":{"row":12,"column":16},"action":"insert","lines":["r"],"id":633}],[{"start":{"row":12,"column":16},"end":{"row":12,"column":17},"action":"insert","lines":["d"],"id":634}],[{"start":{"row":12,"column":17},"end":{"row":12,"column":18},"action":"insert","lines":["e"],"id":635}],[{"start":{"row":12,"column":18},"end":{"row":12,"column":19},"action":"insert","lines":["r"],"id":636}],[{"start":{"row":12,"column":19},"end":{"row":12,"column":20},"action":"insert","lines":[";"],"id":637}],[{"start":{"row":26,"column":20},"end":{"row":27,"column":0},"action":"insert","lines":["",""],"id":638},{"start":{"row":27,"column":0},"end":{"row":27,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":27,"column":2},"end":{"row":28,"column":0},"action":"insert","lines":["",""],"id":639},{"start":{"row":28,"column":0},"end":{"row":28,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":28,"column":2},"end":{"row":29,"column":20},"action":"insert","lines":["if (root == NULL)","    return preorder;"],"id":640}],[{"start":{"row":29,"column":11},"end":{"row":29,"column":19},"action":"remove","lines":["preorder"],"id":641},{"start":{"row":29,"column":11},"end":{"row":29,"column":18},"action":"insert","lines":["inorder"]}],[{"start":{"row":0,"column":0},"end":{"row":92,"column":0},"action":"remove","lines":["#include <iostream>","#include <gtest/gtest.h>","#include <vector>","#include <stack>","#include \"helper.hh\"","","using namespace std;","","template <typename T>","vector<T> preorderTraversalNoRecursion(Node<T>* root) {","  vector<T> preorder;","  if (root == NULL)","    return preorder;","  // 1. root","  preorder.push_back(root->value);","  // 2. Preorder left","  vector<T> preorderLeft = preorderTraversalNoRecursion(root->left);","  preorder.insert(preorder.end(), preorderLeft.begin(), preorderLeft.end());","  // 3. Preorder right","  vector<T> preorderRight = preorderTraversalNoRecursion(root->right);","  preorder.insert(preorder.end(), preorderRight.begin(), preorderRight.end());","  return preorder;","}","","template <typename T>","vector<T> inorderTraversalNoRecursion(Node<T>* root) {","  vector<T> inorder;","  ","  if (root == NULL)","    return inorder;","  ","  // 1. Inorder left","  vector<T> inorderLeft = inorderTraversalNoRecursion(root->left);","  inorder.insert(inorder.end(), inorderLeft.begin(), inorderLeft.end());","  // 2. root","  inorder.push_back(root->value);","  // 3. Inorder right","  vector<T> inorderRight = inorderTraversalNoRecursion(root->right);","  inorder.insert(inorder.end(), inorderRight.begin(), inorderRight.end());","","  return inorder;","}","","void testPreorder() {","  Node<int>* root = buildTree(vector<int>({1}), vector<int>({1}));","  vector<int> preorder = preorderTraversalNoRecursion(root);","  ASSERT_EQ(vector<int>({1}), preorder);","  delete(root);","  ","  root = buildTree(vector<int>({10, 8, 3, 5, 2, 7}), vector<int>({3, 8, 5, 10, 7, 2}));","  preorder = preorderTraversalNoRecursion(root);","  ASSERT_EQ(vector<int>({10, 8, 3, 5, 2, 7}), preorder);","  delete(root);","","  root = buildTree(vector<int>({1, 2, 3, 4, 5}), vector<int>({1, 4, 3, 2, 5}));","  preorder = preorderTraversalNoRecursion(root);","  ASSERT_EQ(vector<int>({1, 2, 3, 4, 5}), preorder);","  delete(root);","}","","","void testInorder() {","  Node<int>* root = buildTree(vector<int>({1}), vector<int>({1}));","  vector<int> inorder = inorderTraversalNoRecursion(root);","  ASSERT_EQ(vector<int>({1}), inorder);","  delete(root);","  ","  root = buildTree(vector<int>({10, 8, 3, 5, 2, 7}), vector<int>({3, 8, 5, 10, 7, 2}));","  inorder = inorderTraversalNoRecursion(root);","  ASSERT_EQ(vector<int>({3, 8, 5, 10, 7, 2}), inorder);","  delete(root);","  ","  root = buildTree(vector<int>({1, 2, 3, 4, 5}), vector<int>({1, 4, 3, 2, 5}));","  inorder = inorderTraversalNoRecursion(root);","  ASSERT_EQ(vector<int>({1, 4, 3, 2, 5}), inorder);","  delete(root);","}","","","int main() {","  testBuildTree();","  testPreorder();","  testInorder();","  ","  Node<int>* root = buildTree(vector<int>({10, 8, 3, 5, 2, 7}), vector<int>({3, 8, 5, 10, 7, 2}));","  vector<int> preorder = preorderTraversalNoRecursion(root);","  vector<int> inorder = inorderTraversalNoRecursion(root);","  cout << \"Preorder: \" << preorder << endl","       << \"Inorder: \" << inorder << endl;","  cout << \"Finished succesfully!\" << endl;","}","",""],"id":642},{"start":{"row":0,"column":0},"end":{"row":102,"column":1},"action":"insert","lines":["#include <iostream>","#include <cstdlib>","#include <gtest/gtest.h>","#include <stack>","#include <string>","#include <cstring>","","using namespace std;","","","\tint GetOperatorWeight(char);","\tint HasHigherPrecedence(char, char);","\tbool IsOperator(char);","\t","\t","\tstring infix2postfix(string infix) ","\t{","\t// TODO insert your code here","\tstack<char> symbols;","\tstring postfix;","","\tfor (int i = 0; i < infix.size(); i++)","\t{","\t\t","\t\tif(IsOperator(infix[i])) ","\t\t{","\t\t\twhile(!symbols.empty() && symbols.top() != '(' || ')' && HasHigherPrecedence(symbols.top(), infix[i]))","\t\t\t{","\t\t\t\tpostfix += symbols.top();","\t\t\t\tsymbols.pop();","\t\t\t}","\t\t\tsymbols.push(infix[i]);","\t\t}","\t\telse if (isalnum(infix[i]))","\t\t{","\t\t\tpostfix += infix[i];","\t\t}","\t\telse if(infix[i] == ')') ","\t\t{","\t\t\twhile(!symbols.empty() && symbols.top() !=  '(')","\t\t\t{","\t\t\t\tpostfix += symbols.top();","\t\t\t\tsymbols.pop();","\t\t\t}","\t\t\tsymbols.pop();","\t\t}","\t}","\treturn postfix;","}","","","","int main()","{","\t(infix2postfix(\"2+3\").c_str(), \"23+\");","\t(infix2postfix(\"a*b\").c_str(), \"ab*\");","\t(infix2postfix(\"2+3*5\").c_str(), \"235*+\");","\t(infix2postfix(\"A+B*C+D\").c_str(), \"ABC*+D+\");","\t(infix2postfix(\"(A+B)*C-(D-E)*(F+G)\").c_str(), \"AB+C*DE-FG+*-\");","\tcout << infix2postfix(\"(A+B)*C-(D-E)*(F+G)\").c_str() << endl;","}","","int GetOperatorWeight(char op)","{","\tint weight = -1;","\tswitch(op)","\t{","\t\tcase '+':","\t\tcase '-':","\t\t\treturn 1;","\t\tbreak;","\t\t","\t\tcase '*':","\t\tcase '/':","\t\t\treturn 2;","\t\tbreak;","\t\tcase '(':","\t\tcase ')':","\t\t\treturn 3;","\t\tbreak;","\t}","\treturn weight;","}","","int HasHigherPrecedence(char op1, char op2)","{","\tint first_op = GetOperatorWeight(op1);","\tint second_op = GetOperatorWeight(op2);","","\treturn (first_op > second_op) ?  true: false;","}","","bool IsOperator(char test)","{","\tif(test == '+' || test == '-' || test == '*' || test == '/' || test == '(' || ')')","\t{","\t\treturn true;","\t}","\telse","\t{","\t\treturn false;","\t}","}"]}],[{"start":{"row":26,"column":29},"end":{"row":26,"column":30},"action":"insert","lines":["("],"id":643}],[{"start":{"row":26,"column":57},"end":{"row":26,"column":58},"action":"insert","lines":[")"],"id":644}],[{"start":{"row":26,"column":53},"end":{"row":26,"column":54},"action":"insert","lines":[" "],"id":645}],[{"start":{"row":26,"column":54},"end":{"row":26,"column":55},"action":"insert","lines":["s"],"id":646}],[{"start":{"row":26,"column":55},"end":{"row":26,"column":56},"action":"insert","lines":["y"],"id":647}],[{"start":{"row":26,"column":56},"end":{"row":26,"column":57},"action":"insert","lines":["m"],"id":648}],[{"start":{"row":26,"column":57},"end":{"row":26,"column":58},"action":"insert","lines":["b"],"id":649}],[{"start":{"row":26,"column":58},"end":{"row":26,"column":59},"action":"insert","lines":["o"],"id":650}],[{"start":{"row":26,"column":59},"end":{"row":26,"column":60},"action":"insert","lines":["l"],"id":651}],[{"start":{"row":26,"column":60},"end":{"row":26,"column":61},"action":"insert","lines":["s"],"id":652}],[{"start":{"row":26,"column":61},"end":{"row":26,"column":62},"action":"insert","lines":["."],"id":653}],[{"start":{"row":26,"column":62},"end":{"row":26,"column":63},"action":"insert","lines":["t"],"id":654}],[{"start":{"row":26,"column":63},"end":{"row":26,"column":64},"action":"insert","lines":["o"],"id":655}],[{"start":{"row":26,"column":64},"end":{"row":26,"column":65},"action":"insert","lines":["p"],"id":656}],[{"start":{"row":26,"column":65},"end":{"row":26,"column":67},"action":"insert","lines":["()"],"id":657}],[{"start":{"row":26,"column":67},"end":{"row":26,"column":68},"action":"insert","lines":[" "],"id":658}],[{"start":{"row":26,"column":68},"end":{"row":26,"column":69},"action":"insert","lines":["!"],"id":659}],[{"start":{"row":26,"column":69},"end":{"row":26,"column":70},"action":"insert","lines":["="],"id":660}]]},"ace":{"folds":[],"scrolltop":240,"scrollleft":0,"selection":{"start":{"row":26,"column":3},"end":{"row":26,"column":124},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":16,"state":"start","mode":"ace/mode/c_cpp"}},"timestamp":1508295813991,"hash":"586b955e83a32d20ca40a1c33f425162ac687022"}